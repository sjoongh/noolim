# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ sjoongh ]
  pull_request:
    branches: [ sjoongh ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: ./gradlew 권한 설정
        run: chmod +x ./gradlew
        shell: bash
      - name: 빌드
        run: ./gradlew build
        shell: bash
      - name: zip파일 생성
        run: mkdir -p before-deploy && cp scripts/*.sh before-deploy/ && cp appspec.yml before-deploy/ && cp build/libs/*.jar before-deploy/ && cd before-deploy && zip -r before-deploy * && cd ../ && mkdir -p deploy && mv before-deploy/before-deploy.zip deploy/springboot2-webservice.zip
      - name: AWS connection
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ACCESS_KEY_SECRET }}
          aws-region: ap-northeast-2
      - name: S3
        run: aws s3 cp --region ap-northeast-2 ./deploy/springboot2-webservice.zip s3://noolim/springboot2-webservice.zip
      - name: CodeDeploy
        run: aws deploy create-deployment --application-name noolim --deployment-group-name noolim-group --s3-location bucket=noolim,key=springboot2-webservice.zip,bundleType=zip
